version: "3.9"

services:
  app:
    build:
      context: .
    restart: always
    volumes:
      - static-data:/vol/web
    environment: 
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - ALLOWED_CORS=${ALLOWED_CORS}
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - AWS_ACCESS_KEY_ID=AKIA5XR2W6Q72JKAEK3Q
      - AWS_SECRET_ACCESS_KEY=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
      - AWS_STORAGE_BUCKET_NAME=unknownchatsbucket
      - AWS_S3_REGION_NAME=ap-south-1
      - AWS_S3_SIGNATURE_VERSION=s3v4
      - AWS_S3_FILE_OVERWRITE=0
      - AWS_QUERYSTING_AUTH=0
      - DEFAULT_FILE_STORAGE=storages.backends.s3boto3.S3Boto3Storage
      - EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_HOST_USER=sumit.unknownchats@gmail.com
      - EMAIL_HOST_PASSWORD=9713751690@Sumit
    depends_on:
      - db

  db:
    image: postgres:13-alpine
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}

  proxy:
    build:
      context: ./proxy
    restart: always
    depends_on:
      - app
    ports:
      - 80:8000
      - 443:443
    volumes:
      - static-data:/vol/static
      # - ./nginx/certs/certificate.crt /etc/nginx/certs/certificate.crt
      # - ./nginx/certs/private.key /etc/nginx/certs/private.key

volumes:
  postgres-data:
  static-data: